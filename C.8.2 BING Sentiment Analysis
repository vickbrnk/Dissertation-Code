library(tidytext)
library(dplyr)
library(tidyverse)
library(mnormt)
library(psych)
library(textclean)
library(glue)
library(data.table)
#--------------------------------------------------------
#Bing lexicon time
#--------------------------------------------------------
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/TxtBlb")
df3 <- read_csv("TxtBlbYesSource.csv")

#assign index for id
df3$ID <- 1:nrow(df3) 

#select lexicon
lex <- get_sentiments("bing")

#loop and do the weight calulcation
list_columns = list(c('NOemojiTxt'),c('EmojiText'),c('LemEmojitxt'),c('LemNOEmojitxt'),c('StemEmojitxt'),c('StemNOEmojitxt'))
for(i in list_columns){
  #Name column
  Namedf1 <- paste("Bing",i,sep="")
  
  df3$forLex <- df3[[i]]
  
  #apply BING lexicon
  scored_df <- df3 %>% 
    unnest_tokens(word, forLex) %>% 
    inner_join(get_sentiments("bing"), by="word")  %>% 
    mutate(sentiment = ifelse(sentiment == 'positive', 1, -1)) %>% 
    group_by(ID) %>% 
    mutate(
      bing_words =  n(),
      bing_score = sum(sentiment))%>% 
    select(-sentiment) %>% 
    select(-word) %>% 
    right_join(df3) %>% 
    group_by(ID)  %>% 
    mutate(bing_words = ifelse(is.na(bing_words), 0, bing_words),
              bing_score = ifelse(is.na(bing_score), 0, bing_score)) 
  #missing values check
  print(sapply(scored_df , function(x) sum(is.na(x))))
  # 0 
  
  #summarise
  scored_df3 <- scored_df  %>% 
      group_by(ID)  %>% 
      summarise(bing_words = mean(bing_words),
                bing_score = mean(bing_score)) 
  
  #calculate sentiment
  scored_df3$test <- scored_df3$bing_score/scored_df3$bing_words
  #missing values check
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #some missing values because of division by 0
  
  #if division by 0, just set neutral post as 0
  scored_df3$test[is.na(scored_df3$test)] <- 0
  #missing values check 
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #
  
  scored_df3[paste(Namedf1)] <-  scored_df3$test
  #remove help columns
  scored_df4 <- select(scored_df3, -c(bing_score,bing_words, test))
  #merge
  df3 <- merge(df3, scored_df4, by = "ID")
}

sapply(df3 , function(x) sum(is.na(x)))
#no missing values!

#set wd and save
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/Bing")
write_csv(df3, "BingYessource.csv")

# summarise
dfSentiment <- df3 %>%
  group_by(TimeSR) %>%
  summarise(Tq_Bing_NoEm = mean(BingNOemojiTxt),
            Tq_Bing_Em = mean(BingEmojiText),
            Tq_Bing_LemEm= mean(BingLemEmojitxt),
            Tq_Bing_LemNoEm= mean(BingLemNOEmojitxt),
            Tq_Bing_StemEm = mean(BingStemEmojitxt),
            Tq_Bing_StemNoEm = mean(BingStemNOEmojitxt))


#--------------------------------------------------------
#Nosource tweets
#--------------------------------------------------------
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/TxtBlb")
df3 <- read_csv("TxtBlbNOSource.csv")
#assign index for id
df3$ID <- 1:nrow(df3) 

#select lexicon
lex <- get_sentiments("bing")

#loop and do the weight calulcation
list_columns = list(c('NOemojiTxt'),c('EmojiText'),c('LemEmojitxt'),c('LemNOEmojitxt'),c('StemEmojitxt'),c('StemNOEmojitxt'))
for(i in list_columns){
  #Name column
  Namedf1 <- paste("Bing",i,sep="")
  
  df3$forLex <- df3[[i]]
  
  #apply BING lexicon
  scored_df <- df3 %>% 
    unnest_tokens(word, forLex) %>% 
    inner_join(get_sentiments("bing"), by="word")  %>% 
    mutate(sentiment = ifelse(sentiment == 'positive', 1, -1)) %>% 
    group_by(ID) %>% 
    mutate(
      bing_words =  n(),
      bing_score = sum(sentiment))%>% 
    select(-sentiment) %>% 
    select(-word) %>% 
    right_join(df3) %>% 
    group_by(ID)  %>% 
    mutate(bing_words = ifelse(is.na(bing_words), 0, bing_words),
              bing_score = ifelse(is.na(bing_score), 0, bing_score)) 
  #missing values check
  print(sapply(scored_df , function(x) sum(is.na(x))))
  # 0 
  
  #summarise
  scored_df3 <- scored_df  %>% 
    group_by(ID)  %>% 
    summarise(bing_words = mean(bing_words),
              bing_score = mean(bing_score)) 
  
  #calculate sentiment
  scored_df3$test <- scored_df3$bing_score/scored_df3$bing_words
  #missing values check
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #some missing values because of division by 0
  
  #if division by 0, just set neutral post as 0
  scored_df3$test[is.na(scored_df3$test)] <- 0
  #missing values check 
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #
  
  scored_df3[paste(Namedf1)] <-  scored_df3$test
  #remove help columns
  scored_df4 <- select(scored_df3, -c(bing_score,bing_words, test))
  #merge
  df3 <- merge(df3, scored_df4, by = "ID")
}

sapply(df3 , function(x) sum(is.na(x)))
#no missing values!

#set wd and save
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/Bing")
write_csv(df3, "BingNosource.csv")

# summarise
dfSentiment <- df3 %>%
  group_by(TimeSR) %>%
  summarise(Tq_Bing_NoEm = mean(BingNOemojiTxt),
            Tq_Bing_Em = mean(BingEmojiText),
            Tq_Bing_LemEm= mean(BingLemEmojitxt),
            Tq_Bing_LemNoEm= mean(BingLemNOEmojitxt),
            Tq_Bing_StemEm = mean(BingStemEmojitxt),
            Tq_Bing_StemNoEm = mean(BingStemNOEmojitxt))




#--------------------------------------------------------
#Reddit Submissions
#--------------------------------------------------------
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/TxtBlb")
df3 <- read_csv("TxtBlbSUbmissions.csv")
#assign index for id
df3$ID <- 1:nrow(df3) 

#select lexicon
lex <- get_sentiments("bing")

#loop and do the weight calulcation
list_columns = list(c('NOemojiTxt'),c('EmojiText'),c('LemEmojitxt'),c('LemNOEmojitxt'),c('StemEmojitxt'),c('StemNOEmojitxt'))
for(i in list_columns){
  #Name column
  Namedf1 <- paste("Bing",i,sep="")
  
  df3$forLex <- df3[[i]]
  
  #apply BING lexicon
  scored_df <- df3 %>% 
    unnest_tokens(word, forLex) %>% 
    inner_join(get_sentiments("bing"), by="word")  %>% 
    mutate(sentiment = ifelse(sentiment == 'positive', 1, -1)) %>% 
    group_by(ID) %>% 
    mutate(
      bing_words =  n(),
      bing_score = sum(sentiment))%>% 
    select(-sentiment) %>% 
    select(-word) %>% 
    right_join(df3) %>% 
    group_by(ID)  %>% 
    mutate(bing_words = ifelse(is.na(bing_words), 0, bing_words),
              bing_score = ifelse(is.na(bing_score), 0, bing_score)) 
  #missing values check
  print(sapply(scored_df , function(x) sum(is.na(x))))
  # 0 
  
  #summarise
  scored_df3 <- scored_df  %>% 
    group_by(ID)  %>% 
    summarise(bing_words = mean(bing_words),
              bing_score = mean(bing_score)) 
  
  #calculate sentiment
  scored_df3$test <- scored_df3$bing_score/scored_df3$bing_words
  #missing values check
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #some missing values because of division by 0
  
  #if division by 0, just set neutral post as 0
  scored_df3$test[is.na(scored_df3$test)] <- 0
  #missing values check 
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #
  
  scored_df3[paste(Namedf1)] <-  scored_df3$test
  #remove help columns
  scored_df4 <- select(scored_df3, -c(bing_score,bing_words, test))
  #merge
  df3 <- merge(df3, scored_df4, by = "ID")
}

sapply(df3 , function(x) sum(is.na(x)))
#no missing values!

#set wd and save
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/Bing")
write_csv(df3, "BingSubmissions.csv")

# summarise
dfSentiment <- df3 %>%
  group_by(TimeSR) %>%
  summarise(Tq_Bing_NoEm = mean(BingNOemojiTxt),
            Tq_Bing_Em = mean(BingEmojiText),
            Tq_Bing_LemEm= mean(BingLemEmojitxt),
            Tq_Bing_LemNoEm= mean(BingLemNOEmojitxt),
            Tq_Bing_StemEm = mean(BingStemEmojitxt),
            Tq_Bing_StemNoEm = mean(BingStemNOEmojitxt))


#--------------------------------------------------------
#Bing lexicon time Comments
#--------------------------------------------------------
df4 <- read_csv("FinalRedditCommentsPrep.csv")
df3 <- select(df4, c(NOemojiTxt,EmojiText,LemEmojitxt,LemNOEmojitxt,StemEmojitxt,StemNOEmojitxt, score, TimeSR) )
df5 <- select(df3, -c(StemEmojitxt))
#assign index for id
df3$ID <- 1:nrow(df3) 

#select lexicon
lex <- get_sentiments("bing")

#loop and do the weight calulcation
list_columns = list(c('NOemojiTxt'),c('EmojiText'),c('LemEmojitxt'),c('LemNOEmojitxt'),c('StemEmojitxt'),c('StemNOEmojitxt'))
for(i in list_columns){
  #Name column
  Namedf1 <- paste("Bing",i,sep="")
  
  df3$forLex <- df3[[i]]
  
  #apply BING lexicon
  scored_df <- df3 %>% 
    unnest_tokens(word, forLex) %>% 
    inner_join(get_sentiments("bing"), by="word")  %>% 
    mutate(sentiment = ifelse(sentiment == 'positive', 1, -1)) %>% 
    group_by(ID) %>% 
    mutate(
      bing_words =  n(),
      bing_score = sum(sentiment))%>% 
    select(-sentiment) %>% 
    select(-word) %>% 
    right_join(df3) %>% 
    group_by(ID)  %>% 
    mutate(bing_words = ifelse(is.na(bing_words), 0, bing_words),
              bing_score = ifelse(is.na(bing_score), 0, bing_score)) 
  #missing values check
  print(sapply(scored_df , function(x) sum(is.na(x))))
  # 0 
  
  #summarise
  scored_df3 <- scored_df  %>% 
      group_by(ID)  %>% 
      summarise(bing_words = mean(bing_words),
                bing_score = mean(bing_score)) 
  
  #calculate sentiment
  scored_df3$test <- scored_df3$bing_score/scored_df3$bing_words
  #missing values check
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #some missing values because of division by 0
  
  #if division by 0, just set neutral post as 0
  scored_df3$test[is.na(scored_df3$test)] <- 0
  #missing values check 
  print(sapply(scored_df3 , function(x) sum(is.na(x))))
  #
  
  scored_df3[paste(Namedf1)] <-  scored_df3$test
  #remove help columns
  scored_df4 <- select(scored_df3, -c(bing_score,bing_words, test))
  #merge
  df3 <- merge(df3, scored_df4, by = "ID")
}

sapply(total , function(x) sum(is.na(x)))
#no missing values!

total <- merge(df5, df3, by = "ID")

#set wd and save
setwd("/Users/vicky/Desktop/Dissertation/Data/1Final/Bing")
write_csv(total, "BingComments.csv")

# summarise
dfSentiment <- df3 %>%
  group_by(TimeSR) %>%
  summarise(Tq_Bing_NoEm = mean(BingNOemojiTxt),
            Tq_Bing_Em = mean(BingEmojiText),
            Tq_Bing_LemEm= mean(BingLemEmojitxt),
            Tq_Bing_LemNoEm= mean(BingLemNOEmojitxt),
            Tq_Bing_StemEm = mean(BingStemEmojitxt),
            Tq_Bing_StemNoEm = mean(BingStemNOEmojitxt))


